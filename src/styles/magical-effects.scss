/* Magical Background Effects */
.magical-background {
  background: radial-gradient(circle at 20% 30%, rgba(147, 51, 234, 0.3) 0%, transparent 50%),
              radial-gradient(circle at 80% 70%, rgba(219, 39, 119, 0.3) 0%, transparent 50%),
              radial-gradient(circle at 50% 50%, rgba(59, 130, 246, 0.2) 0%, transparent 50%);
  animation: mystical-flow 15s ease-in-out infinite;
}

@keyframes mystical-flow {
  0%, 100% { 
    transform: scale(1) rotate(0deg);
    opacity: 0.7;
  }
  33% { 
    transform: scale(1.1) rotate(120deg);
    opacity: 0.9;
  }
  66% { 
    transform: scale(0.9) rotate(240deg);
    opacity: 0.8;
  }
}

/* Rune Patterns */
.rune-pattern {
  background-image: 
    radial-gradient(circle at 25% 25%, #8b5cf6 2px, transparent 2px),
    radial-gradient(circle at 75% 75%, #ec4899 2px, transparent 2px),
    radial-gradient(circle at 75% 25%, #3b82f6 2px, transparent 2px),
    radial-gradient(circle at 25% 75%, #f59e0b 2px, transparent 2px);
  background-size: 100px 100px, 120px 120px, 140px 140px, 160px 160px;
  animation: rune-drift 20s linear infinite;
}

@keyframes rune-drift {
  0% { background-position: 0% 0%, 0% 0%, 0% 0%, 0% 0%; }
  100% { background-position: 100% 100%, -100% 100%, 100% -100%, -100% -100%; }
}

/* Enhanced Floating Particles */
.floating-particles {
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 4px;
    height: 4px;
    background: linear-gradient(45deg, #8b5cf6, #ec4899);
    border-radius: 50%;
    animation: float 8s ease-in-out infinite;
  }

  &::before {
    top: 20%;
    left: 20%;
    animation-delay: -2s;
  }

  &::after {
    top: 60%;
    right: 30%;
    animation-delay: -4s;
  }
}

@keyframes float {
  0%, 100% { 
    transform: translateY(0px) translateX(0px) scale(1);
    opacity: 0.7;
  }
  25% { 
    transform: translateY(-20px) translateX(10px) scale(1.2);
    opacity: 1;
  }
  50% { 
    transform: translateY(-10px) translateX(-15px) scale(0.8);
    opacity: 0.8;
  }
  75% { 
    transform: translateY(5px) translateX(20px) scale(1.1);
    opacity: 0.9;
  }
}

/* Mystical Orbs */
.mystical-orbs {
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 8px;
    height: 8px;
    background: radial-gradient(circle, rgba(139, 92, 246, 0.8) 0%, transparent 70%);
    border-radius: 50%;
    animation: orb-drift 12s ease-in-out infinite;
  }

  &::before {
    top: 30%;
    right: 20%;
    animation-delay: -3s;
  }

  &::after {
    bottom: 40%;
    left: 15%;
    animation-delay: -6s;
  }
}

@keyframes orb-drift {
  0%, 100% { 
    transform: translateY(0px) translateX(0px) scale(1);
    opacity: 0.6;
  }
  33% { 
    transform: translateY(-30px) translateX(20px) scale(1.5);
    opacity: 1;
  }
  66% { 
    transform: translateY(15px) translateX(-25px) scale(0.8);
    opacity: 0.7;
  }
}

/* Magical Glow Effect */
.magical-glow {
  text-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor,
    0 0 15px currentColor,
    0 0 20px currentColor;
  animation: glow-pulse 3s ease-in-out infinite alternate;
}

@keyframes glow-pulse {
  0% {
    text-shadow: 
      0 0 5px currentColor,
      0 0 10px currentColor,
      0 0 15px currentColor,
      0 0 20px currentColor;
  }
  100% {
    text-shadow: 
      0 0 10px currentColor,
      0 0 20px currentColor,
      0 0 30px currentColor,
      0 0 40px currentColor;
  }
}

/* Boot Sequence Effects */
.boot-glow {
  box-shadow: 
    0 0 20px rgba(139, 92, 246, 0.5),
    0 0 40px rgba(139, 92, 246, 0.3),
    0 0 60px rgba(139, 92, 246, 0.1);
  animation: boot-pulse 2s ease-in-out infinite alternate;
}

@keyframes boot-pulse {
  0% {
    box-shadow: 
      0 0 20px rgba(139, 92, 246, 0.5),
      0 0 40px rgba(139, 92, 246, 0.3),
      0 0 60px rgba(139, 92, 246, 0.1);
  }
  100% {
    box-shadow: 
      0 0 30px rgba(139, 92, 246, 0.7),
      0 0 60px rgba(139, 92, 246, 0.5),
      0 0 90px rgba(139, 92, 246, 0.3);
  }
}

/* Terminal Text Effects */
$text-effects: (
  sparkle: (
    animation: sparkle 2s ease-in-out infinite,
    keyframes: (
      '0%, 100%': (opacity: 1),
      '50%': (opacity: 0.7, text-shadow: '0 0 10px currentColor')
    )
  ),
  pulse: (
    animation: pulse-glow 1.5s ease-in-out infinite,
    keyframes: (
      '0%, 100%': (opacity: 1),
      '50%': (opacity: 0.8, transform: scale(1.02))
    )
  ),
  shimmer: (
    background: linear-gradient(90deg, currentColor 25%, rgba(255,255,255,0.5) 50%, currentColor 75%),
    background-size: 200% 100%,
    -webkit-background-clip: text,
    background-clip: text,
    animation: shimmer 2s ease-in-out infinite,
    keyframes: (
      '0%': (background-position: -200% 0),
      '100%': (background-position: 200% 0)
    )
  ),
  glitch: (
    animation: glitch 0.3s ease-in-out infinite,
    keyframes: (
      '0%': (transform: translateX(0)),
      '20%': (transform: translateX(-2px)),
      '40%': (transform: translateX(2px)),
      '60%': (transform: translateX(-1px)),
      '80%': (transform: translateX(1px)),
      '100%': (transform: translateX(0))
    )
  ),
  typewriter: (
    animation: typewriter 0.5s steps(20) forwards,
    keyframes: (
      'from': (width: 0),
      'to': (width: 100%)
    )
  ),
  fade-in: (
    animation: fade-in 0.5s ease-in forwards,
    keyframes: (
      'from': (opacity: 0, transform: translateY(10px)),
      'to': (opacity: 1, transform: translateY(0))
    )
  )
);

@each $name, $props in $text-effects {
  .#{$name}-text {
    @each $prop, $value in $props {
      @if $prop != 'keyframes' {
        #{$prop}: #{$value};
      }
    }
  }
  
  @if map-has-key($props, 'keyframes') {
    @keyframes #{$name} {
      @each $step, $styles in map-get($props, 'keyframes') {
        #{$step} {
          @each $style-prop, $style-value in $styles {
            #{$style-prop}: #{$style-value};
          }
        }
      }
    }
  }
}

/* Status Glow Effects */
$status-colors: (
  success: #10b981,
  error: #ef4444,
  critical: #dc2626
);

@each $status, $color in $status-colors {
  .#{$status}-glow {
    text-shadow: 0 0 10px #{$color}, 0 0 20px #{$color};
    animation: #{$status}-pulse 1s ease-in-out;
    
    @if $status == 'critical' {
      animation: #{$status}-pulse 0.5s ease-in-out infinite;
    }
  }
  
  @keyframes #{$status}-pulse {
    0% { text-shadow: 0 0 5px #{$color}; }
    50% { 
      text-shadow: 0 0 20px #{$color}, 0 0 30px #{$color};
      @if $status == 'critical' {
        text-shadow: 0 0 25px #{$color}, 0 0 35px #{$color};
      }
    }
    100% { 
      text-shadow: 0 0 10px #{$color};
      @if $status == 'critical' {
        text-shadow: 0 0 10px #{$color};
      }
    }
  }
}

/* Notification Effects */
.mystical-notification-bg {
  background: linear-gradient(45deg, 
    rgba(139, 92, 246, 0.1) 0%, 
    rgba(236, 72, 153, 0.1) 50%, 
    rgba(139, 92, 246, 0.1) 100%);
  background-size: 200% 200%;
  animation: notification-flow 3s ease-in-out infinite;
}

@keyframes notification-flow {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

/* Holographic Elements */
.holographic-elements {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

$rune-positions: (
  1: (top: 20%, left: 10%, delay: 0s),
  2: (top: 60%, right: 15%, delay: -5s),
  3: (bottom: 30%, left: 70%, delay: -10s)
);

@each $num, $props in $rune-positions {
  .rune-#{$num} {
    @each $prop, $value in $props {
      @if $prop != 'delay' {
        #{$prop}: #{$value};
      } @else {
        animation-delay: #{$value};
      }
    }
  }
}

.floating-rune {
  position: absolute;
  width: 20px;
  height: 20px;
  background: linear-gradient(45deg, rgba(139, 92, 246, 0.3), rgba(236, 72, 153, 0.3));
  border-radius: 50%;
  animation: rune-float 15s ease-in-out infinite;
}

@keyframes rune-float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
    opacity: 0.3;
  }
  25% {
    transform: translateY(-20px) rotate(90deg);
    opacity: 0.6;
  }
  50% {
    transform: translateY(-10px) rotate(180deg);
    opacity: 0.4;
  }
  75% {
    transform: translateY(-30px) rotate(270deg);
    opacity: 0.7;
  }
}

/* Energy Flow Visualization */
.energy-flow-visualization {
  background: radial-gradient(circle at center, rgba(139, 92, 246, 0.1) 0%, transparent 70%);
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, rgba(139, 92, 246, 0.3) 0%, transparent 70%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: energy-core-pulse 2s ease-in-out infinite;
  }
}

@keyframes energy-core-pulse {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.5;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.8;
  }
}

/* Scrollbar Styling */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, #8b5cf6, #ec4899);
  border-radius: 4px;

  &:hover {
    background: linear-gradient(180deg, #7c3aed, #db2777);
  }
}

/* Slider Styling */
.slider {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;
  cursor: pointer;

  &::-webkit-slider-track {
    background: rgba(107, 114, 128, 0.5);
    height: 8px;
    border-radius: 4px;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: linear-gradient(45deg, #8b5cf6, #ec4899);
    cursor: pointer;
    border: 2px solid #1f2937;
    box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
  }

  &::-moz-range-track {
    background: rgba(107, 114, 128, 0.5);
    height: 8px;
    border-radius: 4px;
    border: none;
  }

  &::-moz-range-thumb {
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: linear-gradient(45deg, #8b5cf6, #ec4899);
    cursor: pointer;
    border: 2px solid #1f2937;
    box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
  }
}

/* Loading Animations */
.loading-dots {
  &::after {
    content: '';
    animation: loading-dots 1.5s steps(4, end) infinite;
  }
}

@keyframes loading-dots {
  0%, 20% { content: ''; }
  40% { content: '.'; }
  60% { content: '..'; }
  80%, 100% { content: '...'; }
}

/* Dimensional Rift Effect */
.dimensional-rift {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(139, 92, 246, 0.1) 35%,
      rgba(139, 92, 246, 0.3) 40%,
      rgba(139, 92, 246, 0.1) 45%,
      transparent 50%
    );
    animation: rift-sweep 3s linear infinite;
  }
}

@keyframes rift-sweep {
  0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

/* Energy Field Animation */
.energy-field {
  background: linear-gradient(
    90deg,
    rgba(139, 92, 246, 0.1) 0%,
    rgba(236, 72, 153, 0.1) 50%,
    rgba(139, 92, 246, 0.1) 100%
  );
  background-size: 200% 100%;
  animation: energy-flow 4s ease-in-out infinite;
}

@keyframes energy-flow {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

/* Line clamp utility */
.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Mobile-specific optimizations */
@media (max-width: 768px) {
  .floating-particles {
    &::before,
    &::after {
      display: none;
    }
  }
  
  .mystical-orbs {
    &::before,
    &::after {
      display: none;
    }
  }
  
  .holographic-elements {
    display: none;
  }

  /* Reduce animation intensity on mobile for better performance */
  .magical-background {
    animation-duration: 20s;
  }

  .rune-pattern {
    animation-duration: 30s;
  }

  /* Optimize text effects for mobile */
  .magical-glow {
    text-shadow: 
      0 0 3px currentColor,
      0 0 6px currentColor;
    animation: none;
  }

  /* Simplify scrollbar for mobile */
  ::-webkit-scrollbar {
    width: 4px;
  }

  /* Reduce glow effects on mobile */
  .success-glow,
  .error-glow,
  .critical-glow {
    animation: none;
    text-shadow: 0 0 5px currentColor;
  }
}

/* Touch-friendly improvements */
@media (hover: none) and (pointer: coarse) {
  /* Increase touch targets */
  button {
    min-height: 44px;
    min-width: 44px;
  }

  /* Disable hover effects on touch devices */
  .hover\:scale-110:hover {
    transform: none;
  }

  /* Simplify animations for touch devices */
  .animate-pulse {
    animation: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .magical-background,
  .rune-pattern {
    opacity: 0.8;
  }

  .text-purple-400 {
    color: #a855f7;
  }

  .border-purple-500\/30 {
    border-color: rgba(168, 85, 247, 0.6);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .magical-background,
  .rune-pattern,
  .floating-particles,
  .mystical-orbs,
  .magical-glow,
  .boot-glow,
  .sparkle-text,
  .pulse-text,
  .shimmer-text,
  .glitch-text,
  .success-glow,
  .error-glow,
  .critical-glow,
  .mystical-notification-bg,
  .floating-rune,
  .energy-flow-visualization,
  .dimensional-rift,
  .energy-field {
    animation: none;

    &::before,
    &::after {
      animation: none;
    }
  }

  .animate-pulse,
  .animate-spin {
    animation: none;
  }
}

/* Theme Variables */
:root {
  --primary-purple: #8b5cf6;
  --primary-pink: #ec4899;
  --primary-blue: #3b82f6;
  --accent-yellow: #f59e0b;
  
  --glow-primary: 0 0 10px var(--primary-purple);
  --glow-secondary: 0 0 20px var(--primary-pink);
  
  --border-mystical: 1px solid rgba(139, 92, 246, 0.3);
  --bg-mystical: rgba(0, 0, 0, 0.3);
  --backdrop-mystical: blur(4px);
}

/* Utility Classes */
.mystical-border {
  border: var(--border-mystical);
}

.mystical-bg {
  background: var(--bg-mystical);
  backdrop-filter: var(--backdrop-mystical);
}

.mystical-glow-primary {
  box-shadow: var(--glow-primary);
}

.mystical-glow-secondary {
  box-shadow: var(--glow-secondary);
}